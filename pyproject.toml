# ### Linting Rules ###
[tool.ruff]
line-length = 100
select = [
    "D",  # pydocstyle
    "E",  # pycodestyle error
    "F",  # pyflakes
    "I",  # isort
    "W",  # pycodestyle warning
    "RUF",  # ruff-specific
    "B006",  # mutable default argument
    "B021",  # f-string docstring
    "COM818",  # warn about implicitly creating a tuple
    "SLF001",  # warn about accessing private members, these can be noqa'd when necessary
]
preview = true  # Enable preview to get the rest of pycodestyle errors
ignore = [
    "D104",  # Ignoe missing docstring in public package
    "D105",  # Ignore missing docstring in magic method
    "D107",  # Ignore missing docstring in __init__
    "D401",  # Ignore first line of docstring should be in imperative mood
    "D203",  # Ignore 1 blank line required before class docstring
    "D212",  # Ignore Multi-line docstring summary should start at the first line
    "RUF005",  # Allow alternate iterable unpacking
    "RUF015",  # Allow + concatenation
]

# ### Formatting Rules ###
[tool.mypy]
# mypy_path = "stubs"

warn_unused_ignores = true
warn_return_any = true
show_error_codes = true

strict_optional = true
implicit_optional = true

disallow_any_unimported = true
disallow_subclassing_any = true
#disallow_any_generics = true

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true

check_untyped_defs = true

# ### Tasks ###
[tool.poe.env]
PYMODULE = "."

[tool.poe.tasks.lint]
help = "Run ruff against the project to check for linting errors."
cmd = "ruff check $PYMODULE"

[tool.poe.tasks.type]
help = "Run mypy against the project to check for type errors."
cmd = "python -m mypy $PYMODULE"


[tool.poe.tasks.check]
help = "Check the project for linting, type and test errors."
sequence = ["lint", "type"]  # , "test"]

[tool.poe.tasks.fix]
help = "Use ruff to fix any auto-fixable linting errors."
cmd = "ruff check --fix-only $PYMODULE"


[tool.poe.tasks.clean]
help = "Clean the project of any build artifacts."
sequence = [
    "shutil:rmtree('dist', ignore_errors=1)",
    "shutil:rmtree('build', ignore_errors=1)",
]
default_item_type = "script"
